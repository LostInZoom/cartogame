@use '../colors';

@property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

.levels-minimap-container {
    pointer-events: all;
    position: absolute;
    z-index: 50;
    transform-origin: center center;
    transform: translate(-50%, -50%) scale(0);

    opacity: 1;
    transition: transform .3s cubic-bezier(0.36, 0, 0.66, -0.56);

    &.active > .levels-minimap {
        width: 4rem;
        height: 4rem;

        border: solid .4rem #0000;
        background: conic-gradient(
                from var(--angle),
                colors.$main-color-medium,
                colors.$main-color-dark,
                colors.$main-color-dark,
                colors.$main-color-medium,
                colors.$main-color-dark,
                colors.$main-color-dark,
                colors.$main-color-medium
            ) border-box;
        
        animation:
            6s border-rotation linear infinite,
            3s scale-breathing ease-in-out infinite .3s;
    }

    &.remaining {
        opacity: .7;
        & > .levels-minimap > .levels-state { opacity: 1; }
    }

    &.finished {
        & > .levels-minimap > .levels-state { opacity: 0.8; }
    }

    &.pop {
        transform: translate(-50%, -50%) scale(1);
        transition: transform .3s cubic-bezier(0.34, 1.56, 0.64, 1);
    }
}

.levels-minimap {
    position: relative;
    width: 3rem;
    height: 3rem;
    overflow: hidden;

    border: solid .4rem colors.$main-color-dark;
    border-radius: 3.5rem;
    box-shadow: 0 0 1rem grey;
}

.levels-state {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;

    width: inherit;
    height: inherit;
    background-color: colors.$main-color-light;

    opacity: 0;
    transition: opacity .2s linear;

    & > svg {
        color: colors.$main-color-dark;
        width: inherit;
        height: inherit;
    }
}

.levels-svg {
    position: absolute;
    z-index: 10;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;

    & > svg {
        display: block;
        height: 100%;
        width: 100%;

        & > line {
            stroke: colors.$main-color-dark;
            stroke-width: 7;
            transition: stroke-width .2s cubic-bezier(0.36, 0, 0.66, -0.56);
            &.reveal {
                animation: line-reveal .3s ease-out forwards;
            }
            &.thinout {
                stroke-width: 0;
            }
        }
    }
}













.levels-text {
    width: 100%;

    pointer-events: all;
    border-top-right-radius: .4rem;
    border-bottom-left-radius: .4rem;
    border-bottom-right-radius: .4rem;
    margin-bottom: 2rem;

    background-color: colors.$secondary-color-dark;
    color: colors.$main-color-light;
    
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    overflow: hidden;
}

.levels-text-hint {
    pointer-events: all;
    padding: 1rem;
    text-align: center;
}

.levels-tiers {
    width: calc(100% - 20vw);

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
}

.levels-tier {
    display: flex;
    width: 100%;
    max-width: 25rem;
    gap: .5rem;
}

.levels-button {
    pointer-events: all;
    height: 4vh;
    max-height: 2rem;
    min-height: 1.2rem;
    padding: 0 .6rem;

    font-size: .9rem;
    display: flex;
    justify-content: center;
    align-items: center;

    background-color: colors.$main-color-light;
    color: colors.$main-color-dark;

    transition: background .1s ease-in-out, transform .2s cubic-bezier(0.34, 1.56, 0.64, 1);
    transform: scale(0);

    &.disabled {
        background-color: colors.$grey-medium;
        color: colors.$grey-extralight;
    }

    &.active {
        background-color: colors.$main-color-light;
        color: colors.$main-color-dark;
        outline: solid .3rem colors.$main-color-dark;
    }

    &.done {
        background-color: colors.$main-color-dark;
        color: colors.$main-color-light;
    }

    &.pop {
        transform: scale(1);
    }
}

.levels-test-button {
    font-family: 'Vincendo';
    border-radius: .4rem;
}

.levels-tier-button {
    font-family: 'Cabin';
    font-weight: bold;
    flex: 1;
    &:first-child {
        border-bottom-left-radius: .4rem;
        border-top-left-radius: .4rem;
    }

    &:last-child {
        border-bottom-right-radius: .4rem;
        border-top-right-radius: .4rem;
    }
}